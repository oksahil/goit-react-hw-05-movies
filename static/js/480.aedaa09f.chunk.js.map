{"version":3,"file":"static/js/480.aedaa09f.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/page/MovieDetailesPage/movieDetailesPage.module.css?bf2a","page/MovieDetailesPage/MovieDetailesPage.jsx","webpack://react-homework-template/./src/shared/component/Button/button.module.css?5ed7","shared/component/Button/Button.jsx","shared/services/getApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"boxImg\":\"movieDetailesPage_boxImg__cmq4X\",\"container\":\"movieDetailesPage_container__BRGrn\",\"item\":\"movieDetailesPage_item__gWQp7\",\"titleMovie\":\"movieDetailesPage_titleMovie__4hXUz\",\"secondTitleMovie\":\"movieDetailesPage_secondTitleMovie__uBk0X\",\"itemGenre\":\"movieDetailesPage_itemGenre__FunFZ\"};","import PropTypes from 'prop-types';\nimport { useState, useEffect } from \"react\";\nimport { useParams, useNavigate, Link, Outlet } from \"react-router-dom\";\nimport * as Scroll from 'react-scroll';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { getMovieDetailesId } from \"./../../shared/services/getApi\";\nimport Button from \"shared/component/Button/Button\";\nimport defaultImg from \"./../../Img/defaultImg.png\";\n\nimport css from \"./movieDetailesPage.module.css\"\n\nconst MovieDetailesPage = () => {\n    const [movie, setMovie] = useState();\n    const { id } = useParams();\n    const navigate = useNavigate();\n    const getPosterPath = (poster_path) => {\n         if (poster_path === null) {\n      return `${defaultImg}`;\n    }    \n    return `https://www.themoviedb.org/t/p/w300${poster_path}`;\n}\n    useEffect(()=> {\n        const fetchMovieDetailes = async() => {\n            try {\n                const result = await getMovieDetailesId(id);\n                setMovie(result);\n            }\n            catch({response}) {\n                console.log(response.data.message);\n            }\n        }\n        fetchMovieDetailes();\n    }, [id])\nfunction scrolling() {\n    const scrollPhoto = Scroll.animateScroll;\n    scrollPhoto.scrollMore(100);\n  }   \n    return (\n        <>\n        <Button className={css.btn} onClick={() => navigate(-1)}>Go back</Button>\n        <div className={css.container}>\n            \n            <div key={movie?.id } className={css.item}>\n               <img  className={css.boxImg} src={getPosterPath(movie?.poster_path)} alt={movie?.title}/>\n            </div>\n            <div className={css.item}>\n                <h1 className={css.titleMovie}>{movie?.title} ({movie?.release_date.slice(0, 4)})</h1>\n                <p><span className={css.secondTitleMovie}>User score:</span>{(movie?.vote_average * 10).toFixed(0)}% ({movie?.vote_count} votes)</p>\n                <h2 className={css.secondTitleMovie}>Overview</h2>\n                <p>{movie?.overview}</p>\n                <h2 className={css.secondTitleMovie}>Genres</h2>\n                    <p>{movie?.genres.map((genre) => (<li key={genre?.id} className={css.itemGenre}>{genre?.name}</li>))}</p>\n            </div>\n            </div>\n            <div className={css.container}>\n                <Link to=\"cast\"><Button className={css.btn}>Cast</Button></Link>\n                <Link to=\"reviews\"><Button className={css.btn}>Reviews</Button></Link>\n                {scrolling()}\n            </div>\n            <Outlet/>\n            </>\n    )\n} \n\nexport default MovieDetailesPage;\n\nMovieDetailesPage.defaultProps = {\n    profile_path: defaultImg,\n    character: \"Sorry\",\n    vote_average: \"Sorry\",\n    overview: \"Sorry\",\n    movie: [],\n    genre: [],\n}\n\nMovieDetailesPage.propTypes = {\n    movie: PropTypes.arrayOf(PropTypes.shape({\n            profile_path: PropTypes.string.isRequired,\n            id: PropTypes.number.isRequired,\n            character: PropTypes.string.isRequired,\n            vote_average: PropTypes.string.isRequired,\n            overview: PropTypes.string.isRequired,\n            genre: PropTypes.arrayOf(PropTypes.shape({\n                id: PropTypes.number.isRequired,\n                name: PropTypes.string.isRequired,\n            }))\n    })) \n};","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"button_btn__r1lcq\"};","import PropTypes from \"prop-types\";\n\nimport css from \"./button.module.css\";\n\nconst Button = ({children, onClick, type}) => {\n    return <button onClick={onClick} className={css.btn} type={type}>{children}</button>\n}\n\nexport default Button;\n\nButton.defaultProps = {\n    type: \"button\",\n}\n\nButton.prototypes = {\n    onClick: PropTypes.func,\n    type: PropTypes.oneOf(['submit', 'button', 'reset']),\n    children: PropTypes.element.isRequired,\n}","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n    params: {\n            api_key: '27a3692489226a6f77b57cb0bdb9ce9a',\n            }\n})\n\n\nexport const getMoviesList = async () => {\n    const {data} = await instance.get(`trending/movie/day?`);\n    return data.results;\n}\n\nexport const getMovieDetailesId = async(id) => {\n    const {data} = await instance.get(`/movie/${id}`);\n  return data;\n}  \n    \nexport const getMovieCastId = async(id) => {\n    const { data } = await instance.get(`/movie/${id}/credits`);\n    return data.cast;\n}  \n\nexport const getMovieReviewsId = async(id) => {\n    const {data} = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n}  \n\nexport const searchMovies = async (query, page = 1) => {\n    const { data } = await instance.get(`/search/movie`, {\n        params: {\n            query,\n            page,\n                }\n    });\n    return data.results;\n}"],"names":["MovieDetailesPage","poster_path","useState","movie","setMovie","id","useParams","navigate","useNavigate","useEffect","fetchMovieDetailes","getMovieDetailesId","result","response","console","log","data","message","Button","className","css","onClick","src","defaultImg","alt","title","release_date","slice","vote_average","toFixed","vote_count","overview","genres","map","genre","name","to","Scroll","scrollMore","defaultProps","profile_path","character","children","type","prototypes","PropTypes","instance","axios","baseURL","params","api_key","getMoviesList","get","results","getMovieCastId","cast","getMovieReviewsId","searchMovies","query","page"],"sourceRoot":""}