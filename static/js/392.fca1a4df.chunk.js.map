{"version":3,"file":"static/js/392.fca1a4df.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Cast/cast.module.css?8374","components/Cast/Cast.jsx","webpack://react-homework-template/./src/shared/component/Button/button.module.css?5ed7","shared/component/Button/Button.jsx","webpack://react-homework-template/./src/shared/component/Message/message.module.css?120f","shared/component/Message/Message.jsx","shared/services/getApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"boxImg\":\"cast_boxImg__2jWwc\",\"container\":\"cast_container__xBK1C\",\"item\":\"cast_item__AMMjV\",\"itemContainer\":\"cast_itemContainer__AhwtJ\",\"titleMovie\":\"cast_titleMovie__F3H7S\",\"secondTitleMovie\":\"cast_secondTitleMovie__pJH+C\",\"itemGenre\":\"cast_itemGenre__E3znH\",\"text\":\"cast_text__E0CXR\"};","import PropTypes from 'prop-types';\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport * as Scroll from 'react-scroll';\n\nimport { getMovieCastId } from \"./../../shared/services/getApi\";\nimport defaultImg from \"./../../Img/defaultImg.png\";\n\nimport Message from \"shared/component/Message/Message\";\nimport Loader from \"shared/component/Loader/Loader\";\nimport Button from \"shared/component/Button/Button\";\n\nimport css from \"./cast.module.css\"\n\nconst Cast = () => {\n    const [items, setItems] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const {id} = useParams();\n\n    useEffect(()=> {\n        const fetchCast = async() => {\n            try {\n                setLoading(true);\n                const result = await getMovieCastId(id);\n                setItems(result);\n                scrollingStart();\n                \n            }\n            catch (error) {\n                setError(error.message);\n                }\n            finally {\n                setLoading(false);\n                } \n        }\n\n        fetchCast();\n    }, [id, setItems]);\n\n    const getPosterPath = (profile_path) => {\n     if (profile_path === null) {\n      return `${defaultImg}`;\n    }\n    return `https://www.themoviedb.org/t/p/w200${profile_path}`;\n}\n\nfunction scrollingStart() {\n    const scrollPhoto = Scroll.animateScroll;\n    scrollPhoto.scrollMore(500);\n  }  \nfunction scrollingUp() {\n    const scrollPost = Scroll.animateScroll;\n    scrollPost.scrollToTop();\n  }  \n    \n    return (\n    <>\n        {error && <Message message=\"Sorry...\" />}\n        {loading && <Loader className={css.loader} />}\n            <ul className={css.container}>\n                {items.length > 0 ? (items.map(({id, original_name, profile_path=defaultImg, character}) => \n                <li key={id} className={css.itemContainer}>\n                <img className={css.boxImg} src={getPosterPath(profile_path)} alt={original_name} />\n                <div className={css.text}><span className={css.secondTitleMovie}>Name:</span> {original_name}</div>\n                <div className={css.text}><span className={css.secondTitleMovie}>Character:</span> {character}</div>\n                </li>)) :\n                    (<Message message=\"Sorry...Sorry...Sorry, no cast for this film!\" />)\n                }          \n            </ul>\n            {items.length !== 0 && <Button className={css.btn} onClick={scrollingUp}>UP</Button>}\n    </>\n    )\n}\n\nexport default Cast;\n\nCast.defaultProps = {\n  profile_path: defaultImg,\n  character: \"Sorry\",\n}\n\nCast.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        profile_path: PropTypes.string.isRequired,\n        id: PropTypes.number.isRequired,\n        original_name: PropTypes.string.isRequired,\n        character: PropTypes.string.isRequired,          \n    }))\n}","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"button_btn__r1lcq\"};","import PropTypes from \"prop-types\";\n\nimport css from \"./button.module.css\";\n\nconst Button = ({children, onClick, type}) => {\n    return <button onClick={onClick} className={css.btn} type={type}>{children}</button>\n}\n\nexport default Button;\n\nButton.defaultProps = {\n    type: \"button\",\n}\n\nButton.prototypes = {\n    onClick: PropTypes.func,\n    type: PropTypes.oneOf(['submit', 'button', 'reset']),\n    children: PropTypes.element.isRequired,\n}","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"message_title__MgS1b\"};","import PropTypes from \"prop-types\";\n\nimport css from \"./message.module.css\";\n\nconst Message = ({ message }) => {\n    return(\n  <h3 className={css.title}>{message}</h3>\n    )\n}\n\nexport default Message;\n\nMessage.propTypes = {\n    message: PropTypes.string.isRequired,\n}","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n    params: {\n            api_key: '27a3692489226a6f77b57cb0bdb9ce9a',\n            }\n})\n\n\nexport const getMoviesList = async () => {\n    const {data} = await instance.get(`trending/movie/day?`);\n    return data.results;\n}\n\nexport const getMovieDetailesId = async(id) => {\n    const {data} = await instance.get(`/movie/${id}`);\n  return data;\n}  \n    \nexport const getMovieCastId = async(id) => {\n    const { data } = await instance.get(`/movie/${id}/credits`);\n    return data.cast;\n}  \n\nexport const getMovieReviewsId = async(id) => {\n    const {data} = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n}  \n\nexport const searchMovies = async (query, page = 1) => {\n    const { data } = await instance.get(`/search/movie`, {\n        params: {\n            query,\n            page,\n                }\n    });\n    return data.results;\n}"],"names":["Cast","useState","items","setItems","loading","setLoading","error","setError","id","useParams","useEffect","fetchCast","getMovieCastId","result","scrollingStart","message","getPosterPath","profile_path","defaultImg","Scroll","scrollMore","Message","Loader","className","css","length","map","original_name","character","src","alt","Button","onClick","scrollToTop","defaultProps","children","type","prototypes","PropTypes","instance","axios","baseURL","params","api_key","getMoviesList","get","data","results","getMovieDetailesId","cast","getMovieReviewsId","searchMovies","query","page"],"sourceRoot":""}